<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Programme extends \App\Entity\Programme implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Programme' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Programme' . "\0" . 'isPrestige', '' . "\0" . 'App\\Entity\\Programme' . "\0" . 'title', '' . "\0" . 'App\\Entity\\Programme' . "\0" . 'ville', '' . "\0" . 'App\\Entity\\Programme' . "\0" . 'text', '' . "\0" . 'App\\Entity\\Programme' . "\0" . 'miniature', '' . "\0" . 'App\\Entity\\Programme' . "\0" . 'img1', '' . "\0" . 'App\\Entity\\Programme' . "\0" . 'img2', '' . "\0" . 'App\\Entity\\Programme' . "\0" . 'departement', '' . "\0" . 'App\\Entity\\Programme' . "\0" . 'tag', '' . "\0" . 'App\\Entity\\Programme' . "\0" . 'biens', '' . "\0" . 'App\\Entity\\Programme' . "\0" . 'subtitle', '' . "\0" . 'App\\Entity\\Programme' . "\0" . 'text2', '' . "\0" . 'App\\Entity\\Programme' . "\0" . 'subtitle2'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Programme' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Programme' . "\0" . 'isPrestige', '' . "\0" . 'App\\Entity\\Programme' . "\0" . 'title', '' . "\0" . 'App\\Entity\\Programme' . "\0" . 'ville', '' . "\0" . 'App\\Entity\\Programme' . "\0" . 'text', '' . "\0" . 'App\\Entity\\Programme' . "\0" . 'miniature', '' . "\0" . 'App\\Entity\\Programme' . "\0" . 'img1', '' . "\0" . 'App\\Entity\\Programme' . "\0" . 'img2', '' . "\0" . 'App\\Entity\\Programme' . "\0" . 'departement', '' . "\0" . 'App\\Entity\\Programme' . "\0" . 'tag', '' . "\0" . 'App\\Entity\\Programme' . "\0" . 'biens', '' . "\0" . 'App\\Entity\\Programme' . "\0" . 'subtitle', '' . "\0" . 'App\\Entity\\Programme' . "\0" . 'text2', '' . "\0" . 'App\\Entity\\Programme' . "\0" . 'subtitle2'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Programme $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getIsPrestige(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsPrestige', []);

        return parent::getIsPrestige();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsPrestige(?bool $isPrestige): \App\Entity\Programme
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsPrestige', [$isPrestige]);

        return parent::setIsPrestige($isPrestige);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle(string $title): \App\Entity\Programme
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getVille(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVille', []);

        return parent::getVille();
    }

    /**
     * {@inheritDoc}
     */
    public function setVille(string $ville): \App\Entity\Programme
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVille', [$ville]);

        return parent::setVille($ville);
    }

    /**
     * {@inheritDoc}
     */
    public function getText(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getText', []);

        return parent::getText();
    }

    /**
     * {@inheritDoc}
     */
    public function setText(?string $text): \App\Entity\Programme
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setText', [$text]);

        return parent::setText($text);
    }

    /**
     * {@inheritDoc}
     */
    public function getMiniature(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMiniature', []);

        return parent::getMiniature();
    }

    /**
     * {@inheritDoc}
     */
    public function setMiniature(string $miniature): \App\Entity\Programme
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMiniature', [$miniature]);

        return parent::setMiniature($miniature);
    }

    /**
     * {@inheritDoc}
     */
    public function getImg1(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImg1', []);

        return parent::getImg1();
    }

    /**
     * {@inheritDoc}
     */
    public function setImg1(?string $img1): \App\Entity\Programme
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImg1', [$img1]);

        return parent::setImg1($img1);
    }

    /**
     * {@inheritDoc}
     */
    public function getImg2(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImg2', []);

        return parent::getImg2();
    }

    /**
     * {@inheritDoc}
     */
    public function setImg2(?string $img2): \App\Entity\Programme
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImg2', [$img2]);

        return parent::setImg2($img2);
    }

    /**
     * {@inheritDoc}
     */
    public function getDepartement(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDepartement', []);

        return parent::getDepartement();
    }

    /**
     * {@inheritDoc}
     */
    public function setDepartement(int $departement): \App\Entity\Programme
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDepartement', [$departement]);

        return parent::setDepartement($departement);
    }

    /**
     * {@inheritDoc}
     */
    public function getTag(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTag', []);

        return parent::getTag();
    }

    /**
     * {@inheritDoc}
     */
    public function setTag(string $tag): \App\Entity\Programme
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTag', [$tag]);

        return parent::setTag($tag);
    }

    /**
     * {@inheritDoc}
     */
    public function getBiens(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBiens', []);

        return parent::getBiens();
    }

    /**
     * {@inheritDoc}
     */
    public function addBien(\App\Entity\Bien $bien): \App\Entity\Programme
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addBien', [$bien]);

        return parent::addBien($bien);
    }

    /**
     * {@inheritDoc}
     */
    public function removeBien(\App\Entity\Bien $bien): \App\Entity\Programme
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeBien', [$bien]);

        return parent::removeBien($bien);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubtitle(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubtitle', []);

        return parent::getSubtitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubtitle(?string $subtitle): \App\Entity\Programme
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubtitle', [$subtitle]);

        return parent::setSubtitle($subtitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getText2(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getText2', []);

        return parent::getText2();
    }

    /**
     * {@inheritDoc}
     */
    public function setText2(?string $text2): \App\Entity\Programme
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setText2', [$text2]);

        return parent::setText2($text2);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubtitle2(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubtitle2', []);

        return parent::getSubtitle2();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubtitle2(?string $subtitle2): \App\Entity\Programme
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubtitle2', [$subtitle2]);

        return parent::setSubtitle2($subtitle2);
    }

}
